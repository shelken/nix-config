# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  #'exec-and-forget borders active_color=0xffCAD3F5 inactive_color=0xbb282E44 hidpi=on width=3.0'
]

# Start AeroSpace at login
start-at-login = true

# 切换时执行
exec-on-workspace-change = [
  '/bin/bash', '-c',
  '~/.config/aerospace/scripts/pip-move.sh',
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 4
inner.vertical =   4
outer.bottom =     4
outer.top =        4
outer.left =       4
outer.right =      4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# alt-h = 'focus left'
# alt-j = 'focus down'
# alt-k = 'focus up'
# alt-l = 'focus right'

alt-left  = 'focus left --ignore-floating --boundaries-action wrap-around-the-workspace'
alt-down  = 'focus down --ignore-floating --boundaries-action wrap-around-the-workspace'
alt-up    = 'focus up --ignore-floating --boundaries-action wrap-around-the-workspace'
alt-right = 'focus right --ignore-floating --boundaries-action wrap-around-the-workspace'

#alt-cmd-right = 'focus right --ignore-floating'
#alt-cmd-left  = 'focus left --ignore-floating'

# alt-left  = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
# alt-down  = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
# alt-up    = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
# alt-right = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-cmd-left  = ['join-with left']
alt-cmd-down  = ['join-with down']
alt-cmd-up    = ['join-with up']
alt-cmd-right = ['join-with right']

alt-ctrl-left  = 'move left'
alt-ctrl-down  = 'move down'
alt-ctrl-up    = 'move up'
alt-ctrl-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'

# alt-t = 'workspace T' # terminal
# alt-f = 'workspace F' # finder
# alt-b = 'workspace B' # Browser
# alt-c = 'workspace C' # Code

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
alt-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
alt-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
alt-shift-4 = 'move-node-to-workspace --focus-follows-window 4'
alt-shift-5 = 'move-node-to-workspace --focus-follows-window 5'
alt-shift-6 = 'move-node-to-workspace --focus-follows-window 6'
alt-shift-7 = 'move-node-to-workspace --focus-follows-window 7'
alt-shift-8 = 'move-node-to-workspace --focus-follows-window 8'
alt-shift-9 = 'move-node-to-workspace --focus-follows-window 9'

alt-ctrl-1 = 'move-node-to-workspace 1'
alt-ctrl-2 = 'move-node-to-workspace 2'
alt-ctrl-3 = 'move-node-to-workspace 3'
alt-ctrl-4 = 'move-node-to-workspace 4'
alt-ctrl-5 = 'move-node-to-workspace 5'
alt-ctrl-6 = 'move-node-to-workspace 6'
alt-ctrl-7 = 'move-node-to-workspace 7'
alt-ctrl-8 = 'move-node-to-workspace 8'
alt-ctrl-9 = 'move-node-to-workspace 9'

# alt-shift-t = 'move-node-to-workspace --focus-follows-window T'
# alt-shift-f = 'move-node-to-workspace --focus-follows-window F'
# alt-shift-b = 'move-node-to-workspace --focus-follows-window B'
# alt-shift-c = 'move-node-to-workspace --focus-follows-window C'

alt-ctrl-enter = 'fullscreen' # 占满屏幕
alt-ctrl-f     = [
  '''exec-and-forget aerospace layout floating && osascript -e 'tell application "System Events" to key code 120 using {control down, option down, command down}' || aerospace layout tiling
  '''
] # 窗口 悬浮/平铺 切换

# 前一个窗口和当前窗口 切换
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'focus-back-and-forth'
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# 将整个工作区移动到另一个显示器
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# 切换模式
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-s = 'mode service' # 进入service模式
alt-shift-r    = 'mode remote-desktop'  # 远程桌面模式

# 服务模式：主要用来重载配置
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
alt-shift-s = 'mode main' # 返回
esc = ['reload-config', 'mode main'] # 重载配置
r = ['flatten-workspace-tree', 'mode main'] # reset layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-cmd-left  = ['join-with left', 'mode main']
alt-cmd-down  = ['join-with down', 'mode main']
alt-cmd-up    = ['join-with up', 'mode main']
alt-cmd-right = ['join-with right', 'mode main']

# 远程桌面模式：打开后忽略所有快捷键
[mode.remote-desktop.binding]
alt-shift-r = 'mode main' # 返回

# 触发打开特定应用的窗口命令
# [[on-window-detected]]
# if.app-id = 'com.tencent.xinWeChat'
# if.window-title-regex-su run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.FontBook'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.codeweavers.CrossOver'
run = ['layout floating']
# [[on-window-detected]]
# if.app-name-regex-substring = '^com.codeweavers.CrossOverHelper'
# run = ['layout floating', 'move-node-to-workspace 5']

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Photos'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = ['layout floating']

# [[on-window-detected]]
# if.app-id = 'com.openai.chat'
# run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.TextEdit'
run = ['layout floating']

[[on-window-detected]]
if.window-title-regex-substring = '^Bitwarden$'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.audirvana.Audirvana'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.crossutility.quantumult-x'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.liguangming.Shadowrocket'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'app.motrix.native'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.now.gg.BlueStacks' 
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.raycast.macos' 
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.hammerspoon.Hammerspoon' 
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'eu.exelban.Stats'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.follow.clash'
run = ['layout floating']

# [[on-window-detected]]
# if.app-id = 'company.thebrowser.Browser'
# run = 'move-node-to-workspace 1'
# [[on-window-detected]]
# if.app-id = 'ea.browser.deta.surf'
# run = 'move-node-to-workspace 1'
# [[on-window-detected]]
# if.app-id = 'com.google.Chrome'
# run = 'move-node-to-workspace 1'
# [[on-window-detected]]
# if.app-id = 'com.apple.Safari'
# run = 'move-node-to-workspace 1'
[[on-window-detected]]
if.app-id = 'net.imput.helium'
if.during-aerospace-startup = true
run = 'move-node-to-workspace 1'

# [[on-window-detected]]
# if.app-id = 'com.jetbrains.intellij'
# run = 'move-node-to-workspace 2'
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
if.during-aerospace-startup = true
run = 'move-node-to-workspace 4'
# [[on-window-detected]]
# if.app-id = 'com.todesktop.230313mzl4w4u92' # cursor
# run = 'move-node-to-workspace 2'
# [[on-window-detected]]
# if.app-id = 'com.trae.app'
# run = 'move-node-to-workspace 2'
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
if.during-aerospace-startup = true
run = ['move-node-to-workspace 2']
# [[on-window-detected]]
# if.app-id = 'md.obsidian' 
# run = 'move-node-to-workspace 2'
# [[on-window-detected]]
# if.app-id = 'com.apple.FinalCutTrial' 
# run = 'move-node-to-workspace 2'

# [[on-window-detected]]
# if.app-id = 'com.tencent.xinWeChat'
# run = 'move-node-to-workspace 3'

# [[on-window-detected]]
# if.app-id = 'com.apple.ScreenSharing'
# run = ['layout floating', 'move-node-to-workspace 4']
# [[on-window-detected]]
# if.app-id = 'tv.parsec.www' 
# run = ['layout floating', 'move-node-to-workspace 4']

# [workspace-to-monitor-force-assignment]
# T = 1
